# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
build:
    runs-on: ubuntu-latest
    steps:
        # Checkout your code
        - uses: actions/checkout@v2

        # Make sure the latest GraalVM is installed.
        # after this step env.JAVA_HOME will point to the GraalVM location
        - name: Setup GraalVM environment
            uses: DeLaGuardo/setup-graalvm@master
            with:
            graalvm-version: 21.0.0.java11

        # Install extra required packaged on top of ubuntu-latest
        - name: Install libraries
            run: sudo apt install libasound2-dev libavcodec-dev libavformat-dev libavutil-dev libgl-dev libgtk-3-dev libpango1.0-dev libxtst-dev

        # Create a staging directory where the binary will be copied into
        - name: Make staging directory
            run: mkdir staging

        # Install the Gluon License (optional)
        # Using this step requires you to set a GLUON_LICENSE secret in the secret configuration of your repo. Have a look at https://gluonhq.com/products/mobile/buy for more information about obtaining a license.
        - name: Gluon License
            uses: gluonhq/gluon-build-license@v1
            with:
            gluon-license: ${{ secrets.GLUON_LICENSE }}


        # Build your project using Maven
        # The desktop profile is used, which means a native build will be created for the host platform (in this case Linux) itself.
        - name: Gluon Build
            run: mvn -Pdesktop client:build client:package
            env:
            GRAALVM_HOME: ${{ env.JAVA_HOME }}


        # Copy the native binary to the staging directory
        - name: Copy native client to staging
            run: cp -r target/client/x86_64-linux/HelloGluon staging


        # Upload the staging directory as a build artifact. You will be able to download this after the build finishes.
        - name: Upload
            uses: actions/upload-artifact@v2
            with:
            name: Package
            path: staging
